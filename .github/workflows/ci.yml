name: CI

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [8.0, 7.4, 7.3]
        database: [mysql, pgsql, sqlite, sqlsrv]
        release: [stable, lowest]
        include:
          - php: 7.4
            release: stable
            coverage: xdebug
          - database: sqlsrv
            pdo_suffix: -5.9.0preview1

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306
      pgsql:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        ports:
          - 5432/tcp
      sqlsrv:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password!
        options: >-
          --name sqlsrv
          --health-cmd "echo quit | /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -l 1 -U sa -P Password!"
        ports:
          - 1433

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/composer/files
          key: php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
          extensions: bcmath, ctype, json, mbstring, openssl, pdo, pdo_${{ matrix.database }}${{ matrix.pdo_suffix }}, tokenizer, xml
          coverage: ${{ matrix.coverage }}
      - run: docker exec sqlsrv /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U sa -P Password! -Q "create database [test]"
        if: matrix.database == 'sqlsrv'
      - run: composer update --no-interaction --no-progress --no-suggest --prefer-dist --prefer-${{ matrix.release }}
      - run: cp tests/config/database.ci.php tests/config/database.php
      - run: |
          PHPUNIT_FLAGS=$([ "${{ matrix.coverage }}" == "xdebug" ] && echo "--coverage-clover=coverage.xml" || echo "")
          vendor/bin/phpunit $PHPUNIT_FLAGS
        env:
          DATABASE: ${{ matrix.database }}
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
          PGSQL_PORT: ${{ job.services.pgsql.ports[5432] }}
          SQLSRV_PORT: ${{ job.services.sqlsrv.ports[1433] }}
      - run: |
          wget -q https://scrutinizer-ci.com/ocular.phar
          php ocular.phar code-coverage:upload --format=php-clover coverage.xml
        if: matrix.coverage == 'xdebug'
